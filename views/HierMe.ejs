<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Hire Vishant Velip - Full-Stack Developer</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />
  <style>
    :root {
      --main-bg: #0c1624;
      --profile-glow: #3ea6ff;
      --profile-glow-secondary: #1e3759;
      --card-bg: #111b2f;
      --primary: #3ea6ff;
      --accent: #ff63a5;
      --white: #fff;
      --text: #e6e6e6;
      --muted: #adb7c2;
      --border: #22314d;
      --radius: 20px;
      --profile-img-size: 340px;
      --shadow: 0 8px 32px #0c162470;
      --glow: 0 0 20px 5px var(--primary), 0 0 40px 10px var(--accent);
    }
    * { box-sizing: border-box; margin: 0; padding: 0; }
    body {
      background: var(--main-bg);
      color: var(--text);
      font-family: 'Inter', 'Segoe UI', Arial, sans-serif;
      min-height: 100vh;
      letter-spacing: 0.02em;
      line-height: 1.7;
      overflow-x: hidden;
    }
    nav {
      background: transparent;
      padding: 30px 7vw 0 7vw;
      display: flex;
      align-items: center;
      justify-content: space-between;
      position: relative;
      top: 0;
      z-index: 50;
      font-size: 1.1rem;
    }
    .logo {
      font-family: 'Segoe UI', 'Arial', sans-serif;
      font-weight: bold;
      color: var(--white);
      font-size: 1.7rem;
      letter-spacing: 2px;
      display: flex;
      align-items: center;
    }
    .logo i {
      font-size: 1.4rem;
      margin-right: 9px;
      color: var(--accent);
    }
    .logo span { color: var(--primary); }
    .nav-links {
      display: flex;
      gap: 35px;
      align-items: center;
    }
    .nav-links a {
      color: var(--white);
      text-decoration: none;
      font-weight: 500;
      position: relative;
      padding: 3px 0;
      transition: color 0.2s;
    }
    .nav-links a:hover,
    .nav-links a.active {
      color: var(--primary);
    }
    .nav-links a.active::after,
    .nav-links a:hover::after {
      content: "";
      display: block;
      width: 100%;
      height: 2px;
      background: var(--primary);
      border-radius: 1px;
      margin-top: 2px;
      transition: 0.3s;
    }
    .main-content {
      max-width: 980px;
      margin: 0 auto 40px auto;
      padding: 55px 16px 30px 16px;
    }
    .hero-section {
      background: var(--card-bg);
      border-radius: var(--radius);
      box-shadow: var(--shadow);
      padding: 50px 8vw 40px 8vw;
      text-align: center;
      margin-bottom: 38px;
      animation: fadein 1.2s;
    }
    .hero-section h1 {
      font-size: 2.7rem;
      font-weight: 700;
      color: var(--white);
      margin-bottom: 12px;
      letter-spacing: 1.5px;
      transition: text-shadow 0.3s;
    }
    .hero-section h1:hover {
      text-shadow: 0 0 10px var(--primary), 0 0 30px var(--accent);
    }
    .hero-section h1 .primary { color: var(--primary); }
    .hero-section h2 {
      font-size: 1.3rem;
      font-weight: 500;
      color: var(--primary);
      margin-bottom: 22px;
      letter-spacing: 0.03em;
    }
    .hero-section p {
      font-size: 1.15rem;
      color: var(--muted);
      max-width: 600px;
      margin: 0 auto 18px auto;
      line-height: 2;
    }
    .tech-stack-list {
      margin-top: 18px;
      display: flex;
      flex-wrap: wrap;
      gap: 18px;
      justify-content: center;
    }
    .tech-stack-list span {
      background: var(--primary);
      color: var(--white);
      border-radius: 12px;
      padding: 6px 16px;
      font-size: 1.01rem;
      font-weight: 600;
      box-shadow: 0 1px 8px #3ea6ff22;
      transition: box-shadow 0.25s;
    }
    .tech-stack-list span:hover {
      box-shadow: 0 0 12px 3px var(--primary), 0 0 18px 6px var(--accent);
    }
    .section-title {
      font-size: 2rem;
      color: var(--white);
      font-weight: 700;
      margin-bottom: 30px;
      text-align: center;
      letter-spacing: 1px;
    }
    .hire-me-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 36px;
      margin-bottom: 40px;
    }
    .hire-me-card {
      background: var(--card-bg);
      border-radius: var(--radius);
      box-shadow: var(--shadow);
      padding: 34px 28px 30px 28px;
      text-align: left;
      transition: transform 0.18s, box-shadow 0.18s;
      border: 2px solid var(--border);
    }
    .hire-me-card:hover {
      transform: translateY(-7px) scale(1.03);
      box-shadow: 0 0 40px #3ea6ff33, 0 1.5px 8px #ff63a522;
      border-color: var(--primary);
    }
    .hire-me-card h3 {
      color: var(--primary);
      font-size: 1.33rem;
      font-weight: 700;
      margin-bottom: 12px;
      letter-spacing: 0.5px;
    }
    .hire-me-card ul {
      list-style: none;
      margin: 0 0 20px 0;
      padding: 0;
    }
    .hire-me-card ul li {
      margin-bottom: 10px;
      padding-left: 25px;
      position: relative;
      color: var(--muted);
      font-size: 1.03rem;
    }
    .hire-me-card ul li::before {
      content: "\f00c";
      font-family: "Font Awesome 6 Free";
      position: absolute;
      left: 0;
      color: var(--primary);
      font-weight: 900;
      font-size: 1rem;
    }
    .hire-me-card .price {
      color: var(--accent);
      font-size: 2rem;
      font-weight: 800;
      margin-bottom: 11px;
      transition: text-shadow 0.3s;
    }
    .hire-me-card .price:hover {
      text-shadow: 0 0 12px var(--accent), 0 0 24px var(--primary);
    }
    .hire-me-card .btn {
      display: inline-block;
      background: var(--primary);
      border-radius: 10px;
      color: var(--white);
      font-weight: 600;
      padding: 11px 24px;
      font-size: 1.1rem;
      border: 2px solid var(--primary);
      box-shadow: 0 2px 8px #3ea6ff12;
      margin: 2px 7px 2px 0;
      cursor: pointer;
      transition: background 0.19s, box-shadow 0.21s, color 0.18s;
      text-decoration: none;
      position: relative;
    }
    .hire-me-card .btn:hover, .hire-me-form button:hover, .btn.glow {
      background: var(--accent);
      border-color: var(--accent);
      color: var(--white);
      box-shadow: var(--glow);
      animation: glowPulse 1s infinite alternate;
    }
    @keyframes glowPulse {
      from { box-shadow: 0 0 20px 5px var(--primary), 0 0 40px 10px var(--accent); }
      to { box-shadow: 0 0 10px 2px var(--primary), 0 0 15px 5px var(--accent); }
    }
    .calculator-section {
      background: var(--card-bg);
      border-radius: var(--radius);
      box-shadow: var(--shadow);
      padding: 34px 18px;
      margin-bottom: 40px;
      margin-top: 10px;
      transition: box-shadow 0.18s;
    }
    .calculator-section:hover {
      box-shadow: 0 0 32px #3ea6ff33, 0 1.5px 8px #ff63a522;
    }
    .calculator-form label {
      color: var(--white);
      font-weight: 600;
      margin-bottom: 9px;
      display: block;
      font-size: 1.07rem;
    }
    .calculator-form select,
    .calculator-form input[type="checkbox"],
    .calculator-form input[type="email"] {
      margin-right: 9px;
      margin-bottom: 14px;
      font-size: 1rem;
    }
    .calculator-form select,
    .calculator-form input[type="email"] {
      padding: 10px;
      border: 1.7px solid var(--border);
      border-radius: 8px;
      background: var(--main-bg);
      color: var(--text);
      font-size: 1rem;
      width: 100%;
      max-width: 400px;
      transition: border-color 0.3s, box-shadow 0.3s;
      font-family: inherit;
    }
    .calculator-form select:focus,
    .calculator-form input[type="email"]:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 10px 2px #3ea6ff44;
    }
    .calculator-form .checkbox-group label {
      font-size: 0.97rem;
      display: flex;
      align-items: center;
      font-weight: 500;
      margin-bottom: 4px;
      cursor: pointer;
      color: var(--text);
      transition: color 0.23s;
    }
    .calculator-form .checkbox-group label:hover {
      color: var(--primary);
      text-shadow: 0 0 4px #3ea6ff33;
    }
    .selected-items h3 {
      color: var(--accent);
      font-size: 1.12rem;
      margin-bottom: 5px;
    }
    .selected-items ul {
      list-style: none;
      color: var(--muted);
      padding: 0;
      font-size: 0.97rem;
    }
    .selected-items ul li {
      margin-bottom: 8px;
      position: relative;
      padding-left: 20px;
    }
    .selected-items ul li::before {
      content: "\f00c";
      font-family: "Font Awesome 6 Free";
      position: absolute;
      left: 0;
      color: var(--primary);
      font-weight: 900;
      font-size: 0.9rem;
    }
    .fee-display {
      margin: 14px 0 0 0;
      font-size: 1.21rem;
      color: var(--primary);
      font-weight: 700;
      text-align: center;
      letter-spacing: 0.7px;
    }
    .fee-display span {
      color: var(--accent);
      font-weight: 800;
    }
    .payment-details {
      background: var(--main-bg);
      border-radius: 8px;
      padding: 16px 20px;
      margin: 17px 0 12px 0;
      font-size: 1rem;
      color: var(--muted);
      border: 1px solid var(--border);
    }
    .upi-id {
      color: var(--primary);
      font-weight: 700;
      font-size: 1.09rem;
      margin-left: 4px;
    }
    .copy-message {
      display: none;
      color: var(--primary);
      font-size: 0.93rem;
      margin-top: 6px;
    }
    .copy-message.visible { display: block; }
    .hire-me-form {
      max-width: 410px;
      margin: 0 auto;
      background: var(--card-bg);
      border-radius: var(--radius);
      box-shadow: var(--shadow);
      padding: 38px 28px 28px 28px;
      margin-bottom: 23px;
      margin-top: 12px;
      transition: box-shadow 0.18s;
      position: relative;
    }
    .hire-me-form:focus-within, .hire-me-form:hover {
      box-shadow: 0 0 32px #3ea6ff33, 0 1.5px 8px #ff63a522;
    }
    .hire-me-form label {
      color: var(--white);
      font-weight: 600;
      margin-bottom: 7px;
      display: block;
      font-size: 1.04rem;
    }
    .hire-me-form input,
    .hire-me-form textarea {
      width: 100%;
      padding: 9px 10px;
      border: 1.7px solid var(--border);
      border-radius: 8px;
      background: var(--main-bg);
      color: var(--text);
      font-size: 1rem;
      margin-bottom: 17px;
      font-family: inherit;
      font-weight: 500;
      resize: vertical;
      transition: border-color 0.3s, box-shadow 0.3s;
    }
    .hire-me-form input:focus,
    .hire-me-form textarea:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 10px 2px #3ea6ff44;
    }
    .hire-me-form button {
      background: var(--primary);
      color: var(--white);
      padding: 11px 24px;
      border: none;
      border-radius: 10px;
      font-size: 1.1rem;
      font-weight: 700;
      cursor: pointer;
      transition: background 0.17s, box-shadow 0.18s;
      position: relative;
    }
    .hire-me-form button:active {
      box-shadow: var(--glow);
    }
    .form-message {
      margin-top: 10px;
      font-size: 1rem;
      min-height: 25px;
      text-align: center;
    }
    .form-message.success { color: var(--primary); }
    .form-message.error { color: var(--accent); }
    .loader {
      margin: 20px auto;
      width: 56px;
      height: 56px;
      border: 5px solid #3ea6ff22;
      border-top: 5px solid var(--primary);
      border-radius: 50%;
      animation: spin 1.1s linear infinite;
    }
    .payment-container {
      margin-top: 18px;
      display: flex;
      gap: 13px;
      justify-content: center;
    }
    #pay-now-btn, #pay-later-btn {
      font-size: 1rem;
      border-radius: 9px;
      font-weight: 600;
      border: none;
      color: var(--white);
      padding: 10px 25px;
      box-shadow: 0 1.5px 10px #3ea6ff18;
      background: var(--primary);
      cursor: pointer;
      transition: background 0.16s, box-shadow 0.23s;
    }
    #pay-now-btn { background: var(--accent); }
    #pay-now-btn:hover { background: var(--primary); box-shadow: var(--glow); }
    #pay-later-btn:hover { background: var(--accent); box-shadow: var(--glow); }
    .hidden { display: none !important; }
    .modal-overlay {
      position: fixed;
      z-index: 2000;
      left: 0; top: 0;
      width: 100vw; height: 100vh;
      background: rgba(12, 22, 36, 0.7);
      display: none;
      align-items: center;
      justify-content: center;
      animation: fadein 0.4s;
    }
    .modal-overlay.active { display: flex; }
    .modal {
      background: var(--card-bg);
      border-radius: var(--radius);
      box-shadow: 0 0 50px 8px #3ea6ff44, 0 0 24px 10px #ff63a533;
      padding: 38px 28px 28px 28px;
      min-width: 320px;
      max-width: 90vw;
      position: relative;
      animation: glowPulse 1.5s infinite alternate;
    }
    .modal .close-btn {
      position: absolute;
      top: 14px; right: 20px;
      font-size: 1.4rem;
      color: var(--muted);
      background: none;
      border: none;
      cursor: pointer;
      transition: color 0.22s;
    }
    .modal .close-btn:hover { color: var(--accent); }
    .modal h2 {
      margin-bottom: 18px;
      color: var(--primary);
      font-weight: 700;
      font-size: 1.3rem;
      text-align: center;
    }
    .modal .modal-content {
      margin-bottom: 15px;
      text-align: center;
      color: var(--text);
    }
    .modal .payment-actions {
      display: flex;
      gap: 18px;
      justify-content: center;
      margin-top: 21px;
    }
    .modal .btn {
      background: var(--primary);
      color: var(--white);
      border: none;
      border-radius: 10px;
      padding: 9px 21px;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      box-shadow: 0 2px 8px #3ea6ff12;
      transition: background 0.19s, box-shadow 0.21s, color 0.18s;
    }
    .modal .btn.pay { background: var(--accent); }
    .modal .btn.pay:hover, .modal .btn.later:hover {
      background: var(--primary);
      box-shadow: var(--glow);
    }
    footer {
      text-align: center;
      padding: 20px 0;
      background: var(--card-bg);
      color: var(--muted);
      border-top: 1px solid var(--border);
    }
    .social-links {
      display: flex;
      justify-content: center;
      gap: 16px;
      margin-bottom: 10px;
    }
    .social-links a {
      color: var(--primary);
      font-size: 1.18rem;
      background: var(--main-bg);
      padding: 7px 10px;
      border-radius: 7px;
      transition: background 0.15s, color 0.15s;
    }
    .social-links a:hover {
      background: var(--primary);
      color: var(--white);
    }
    footer p {
      font-size: 0.95rem;
    }
    @media (max-width: 900px) {
      .hire-me-grid { grid-template-columns: 1fr; }
      .main-content { padding: 55px 3vw 30px 3vw; }
      .hero-section { padding: 40px 3vw 30px 3vw; }
    }
    @media (max-width: 600px) {
      nav { flex-direction: column; gap: 12px; padding: 18px 3vw; }
      .logo { font-size: 1.23rem; }
      .nav-links { gap: 20px; flex-wrap: wrap; justify-content: center; }
      .main-content { padding: 40px 2vw 24px 2vw; }
      .hero-section h1 { font-size: 1.4rem; }
      .hero-section h2 { font-size: 1.1rem; }
      .section-title { font-size: 1.22rem; }
      .hire-me-form, .calculator-section { padding: 18px 7px; }
      .hire-me-card { padding: 18px 7px; }
      .modal { padding: 16px 7px 18px 7px; }
    }
    @keyframes fadein {
      from { opacity: 0; transform: translateY(30px); }
      to { opacity: 1; transform: none; }
    }
    @keyframes spin {
      to { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <nav>
    <div class="logo"><i class="fas fa-code"></i> Vishant <span>Velip</span></div>
    <div class="nav-links">
      <a href="#services">Services</a>
      <a href="#calculator">Calculator</a>
      <a href="#contact-form">Contact</a>
      <a href="mailto:vishantvelip92@gmail.com" title="Email">Email</a>
    </div>
  </nav>
  <main class="main-content">
    <section class="hero-section">
      <h1>👋 Hire Vishant <span class="primary">Velip</span></h1>
      <h2>Full-Stack Web Developer</h2>
      <p>
        Transforming your ideas into robust, modern, and scalable web solutions.<br>
        I specialize in creating visually stunning, high-performance websites and apps tailored to your needs.<br>
        <b>Let's build something impactful together!</b>
      </p>
      <div class="tech-stack-list">
        <span>React.js</span>
        <span>Next.js</span>
        <span>Node.js</span>
        <span>Express</span>
        <span>MongoDB</span>
        <span>PostgreSQL</span>
        <span>REST API</span>
        <span>UI/UX</span>
        <span>SEO</span>
      </div>
    </section>

    <div class="section-title" id="services">My Services & Rates</div>
    <section class="hire-me-grid">
      <div class="hire-me-card">
        <h3>Hourly Rate</h3>
        <div class="price">₹1,500 / hr</div>
        <ul>
          <li>Small site (10-20 hrs): ₹15,000 - ₹30,000</li>
          <li>Medium site (20-50 hrs): ₹30,000 - ₹75,000</li>
          <li>Large/Custom: Contact for Quote</li>
        </ul>
        <div class="payment-details">
          Pay via UPI: <span class="upi-id">9420970930@ibl</span>
          <button class="btn" onclick="copyUpiId('9420970930@ibl')">Copy UPI ID</button>
          <div id="copy-message" class="copy-message">UPI ID copied!</div>
          <div style="margin-top:10px;">Please include your email in UPI remarks.</div>
        </div>
        <a href="mailto:vishantvelip92@gmail.com" class="btn">Get a Quote</a>
      </div>
      <div class="hire-me-card">
        <h3>What I Offer</h3>
        <ul>
          <li>Modern frontend (React, Next.js)</li>
          <li>Backend APIs (Node.js, Express)</li>
          <li>Database integration (MongoDB, PostgreSQL)</li>
          <li>SEO & Performance Optimization</li>
          <li>UI/UX design & consulting</li>
          <li>Deployment & Cloud Setup</li>
          <li>Project rescue & bug fixing</li>
        </ul>
        <a href="#contact-form" class="btn">Hire Me Now</a>
      </div>
    </section>

    <section class="calculator-section" id="calculator">
      <div class="section-title">Estimate Your Project Cost</div>
      <form id="calculator-form" class="calculator-form">
        <label for="payment-email">Your Email (for payment confirmation)</label>
        <input type="email" id="payment-email" name="payment-email" required placeholder="Enter your email" />
        <label for="website-type">Select Website Type</label>
        <select id="website-type" name="website-type">
          <option value="0">None</option>
          <option value="16">Simple static website (16 hours)</option>
          <option value="40">Portfolio or business site (40 hours)</option>
          <option value="80">Blog platform (80 hours)</option>
          <option value="120">E-commerce site (120 hours)</option>
          <option value="240">Custom web app (240 hours)</option>
        </select>
        <div class="checkbox-group" style="margin-top:12px;">
          <label>Additional Tasks</label>
          <label><input type="checkbox" name="tasks" value="fixed:1"> Home Page Design (₹1)</label>
          <label><input type="checkbox" name="tasks" value="8"> About/Contact Page (8 hours)</label>
          <label><input type="checkbox" name="tasks" value="60"> Blog System with Admin Panel (60 hours)</label>
          <label><input type="checkbox" name="tasks" value="12"> Responsive Coding (12 hours)</label>
          <label><input type="checkbox" name="tasks" value="12"> SEO Setup & Testing (12 hours)</label>
        </div>
        <div class="selected-items">
          <h3>Selected Items:</h3>
          <ul id="selected-items-list"></ul>
        </div>
        <div class="fee-display">
          Estimated Hours: <span id="total-hours">0</span> • Total Fee: <span id="total-fee">₹0</span>
        </div>
      </form>
    </section>

    <section class="hire-me-form hidden" id="contact-form">
      <div class="section-title">Get in Touch</div>
      <form id="hire-me-form">
        <label for="name">Name</label>
        <input type="text" id="name" name="name" required />
        <label for="email">Email</label>
        <input type="email" id="email" name="email" required />
        <label for="message">Project Details</label>
        <textarea id="message" name="message" rows="5" required placeholder="Describe your project needs..."></textarea>
        <button type="submit" id="send-btn">Send Message</button>
        <div id="form-message" class="form-message"></div>
      </form>
      <div class="payment-container hidden" id="payment-container">
        <button type="button" id="pay-now-btn" class="btn">Pay Now via UPI</button>
        <button type="button" id="pay-later-btn" class="btn">Pay Later</button>
        <div id="payment-message" class="form-message"></div>
      </div>
    </section>
  </main>
  <footer>
    <div class="social-links">
      <a href="https://github.com/vishantvelip" target="_blank" title="GitHub"><i class="fab fa-github"></i></a>
      <a href="https://linkedin.com/in/vishantvelip" target="_blank" title="LinkedIn"><i class="fab fa-linkedin"></i></a>
      <a href="https://twitter.com/vishantvelip" target="_blank" title="Twitter"><i class="fab fa-twitter"></i></a>
      <a href="mailto:webdeveloper10980@gmail.com" title="Email"><i class="fas fa-envelope"></i></a>
    </div>
    <p>© 2025 Vishant Velip. All rights reserved.</p>
  </footer>

  <!-- Payment Popup Modal -->
  <div class="modal-overlay" id="payment-modal-overlay">
    <div class="modal" id="payment-modal">
      <button class="close-btn" id="close-modal" title="Close">×</button>
      <h2>Proceed to Payment</h2>
      <div class="modal-content">
        <div style="font-size:1.09rem;margin-bottom:10px;">
          <b>Estimated Fee:</b> <span id="modal-fee"></span><br>
          <b>Your Email:</b> <span id="modal-email"></span>
        </div>
        <div style="margin-bottom:12px;">
          <b>Pay to UPI:</b> <span class="upi-id" id="modal-upi">9420970930@ibl</span>
        </div>
        <div style="font-size:.98rem;color:var(--muted);margin-bottom:6px;">
          Please include your email in payment remarks for reference.
        </div>
        <div class="payment-actions">
          <button class="btn pay" id="modal-pay-now">Pay Now</button>
          <button class="btn later" id="modal-pay-later">Pay Later</button>
        </div>
        <div id="modal-payment-message" class="form-message"></div>
      </div>
    </div>
  </div>

  <script>
    // API base URLs
    const API_BASE_A = 'https://database-managemet-api.onrender.com';
    const API_BASE_B = 'https://database-managemet-api.vercel.app';
    const MAX_RETRIES = 3;

    let selectedItems = [];
    let totalFee = 0;
    let totalHours = 0;
    let lastEmail = '';

    function setCache(key, value, ttl) {
      const item = { value: value, expiry: Date.now() + ttl };
      localStorage.setItem(key, JSON.stringify(item));
    }
    function getCache(key) {
      const itemStr = localStorage.getItem(key);
      if (!itemStr) return null;
      try {
        const item = JSON.parse(itemStr);
        if (Date.now() > item.expiry) {
          localStorage.removeItem(key);
          return null;
        }
        return item.value;
      } catch {
        localStorage.removeItem(key);
        return null;
      }
    }
    async function fetchWithTimeoutAndFailover(endpoint, options = {}, timeout = 10000) {
      const endpoints = [`${API_BASE_A}/${endpoint}`, `${API_BASE_B}/${endpoint}`];
      let lastError;
      for (let attempt = 0; attempt < MAX_RETRIES; attempt++) {
        for (const url of endpoints) {
          try {
            const controller = new AbortController();
            const id = setTimeout(() => controller.abort(), timeout);
            const response = await fetch(url, { ...options, signal: controller.signal });
            clearTimeout(id);
            if (!response.ok) throw new Error(`HTTP error ${response.status}`);
            return response;
          } catch (error) {
            lastError = error;
            if (url === endpoints[endpoints.length - 1] && attempt < MAX_RETRIES - 1) {
              await new Promise(resolve => setTimeout(resolve, 1000));
            }
          }
        }
      }
      throw lastError || new Error('All fetch attempts failed');
    }

    function observeFadeIn(selector) {
      const elements = document.querySelectorAll(selector);
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.style.opacity = 1;
            entry.target.style.transform = 'none';
            observer.unobserve(entry.target);
          }
        });
      }, { threshold: 0.1 });
      elements.forEach(el => observer.observe(el));
    }

    async function sendEmail(name, email, message, selectedItems, totalFee, isPayment = false, paymentStatus = 'Pending') {
      const container = document.getElementById('form-message');
      container.innerHTML = '<div class="loader">Sending email...</div>';
      container.style.display = 'block';
      try {
        const response = await fetchWithTimeoutAndFailover('api/email/send-email', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ name, email, message, selectedItems, totalFee, isPayment, paymentStatus })
        });
        const data = await response.json();
        if (data.error) throw new Error(data.error);
        container.innerHTML = `<p class="form-message success">${data.message || 'Email sent successfully!'}</p>`;
        if (!isPayment) {
          showPaymentPopup(email, totalFee);
        }
        return true;
      } catch (error) {
        container.innerHTML = `<p class="form-message error">Failed to send email: ${error.message}</p>`;
        return false;
      }
    }

    function copyUpiId(upiId) {
      navigator.clipboard.writeText(upiId).then(() => {
        const copyMessage = document.getElementById('copy-message');
        copyMessage.classList.add('visible');
        setTimeout(() => copyMessage.classList.remove('visible'), 2000);
      });
    }

    function generateUpiLink(amount, upiId, name, transactionNote, transactionId) {
      const params = new URLSearchParams({
        pa: upiId,
        pn: name,
        tn: transactionNote,
        am: amount,
        cu: 'INR',
        tr: transactionId,
      });
      return `upi://pay?${params.toString()}`;
    }

    function initiatePaymentOptions() {
      const payNowBtn = document.getElementById('pay-now-btn');
      const payLaterBtn = document.getElementById('pay-later-btn');
      const paymentMessage = document.getElementById('payment-message');

      payNowBtn.addEventListener('click', async () => {
        if (totalFee <= 0) {
          paymentMessage.innerHTML = '<p class="form-message error">Please select items to calculate a fee.</p>';
          return;
        }
        const emailInput = document.getElementById('payment-email');
        const email = emailInput.value.trim();
        if (!email) {
          paymentMessage.innerHTML = '<p class="form-message error">Please enter a valid email address.</p>';
          return;
        }
        const upiId = '9420970930@ibl';
        const payeeName = 'Vishant Velip';
        const transactionNote = 'Website Development Payment';
        const transactionId = `TXN${Date.now()}`;
        const upiLink = generateUpiLink(totalFee, upiId, payeeName, transactionNote, transactionId);
        let message = `Payment initiated for project.\nTransaction ID: ${transactionId}\nPayment Status: Pending\nNote: Payment is pending confirmation via UPI.\n\nSelected Project Items:\n${selectedItems.length > 0 ? '- ' + selectedItems.join('\n- ') : 'None'}\n\nTotal Estimated Cost: ₹${totalFee.toLocaleString('en-IN')}`;
        const success = await sendEmail('Client', email, message, selectedItems, totalFee, true, 'Pending');
        if (success) {
          paymentMessage.innerHTML = '<p class="form-message success">Redirecting to UPI app...</p>';
          setTimeout(() => window.location.href = upiLink, 1000);
        } else {
          paymentMessage.innerHTML = '<p class="form-message error">Failed to send payment email. Please try again.</p>';
        }
      });

      payLaterBtn.addEventListener('click', async () => {
        const emailInput = document.getElementById('payment-email');
        const email = emailInput.value.trim();
        if (!email) {
          paymentMessage.innerHTML = '<p class="form-message error">Please enter a valid email address.</p>';
          return;
        }
        let message = `Payment deferred for project.\nPayment Status: Pending\nNote: Payment will be processed later.\n\nSelected Project Items:\n${selectedItems.length > 0 ? '- ' + selectedItems.join('\n- ') : 'None'}\n\nTotal Estimated Cost: ₹${totalFee.toLocaleString('en-IN')}`;
        const success = await sendEmail('Client', email, message, selectedItems, totalFee, true, 'Pending');
        if (success) {
          paymentMessage.innerHTML = '<p class="form-message success">You have chosen to pay later. We will contact you with payment details.</p>';
          document.getElementById('payment-container').classList.add('hidden');
        } else {
          paymentMessage.innerHTML = '<p class="form-message error">Failed to send payment email. Please try again.</p>';
        }
      });
    }

    function calculateCost() {
      const websiteTypeSelect = document.getElementById('website-type');
      const websiteTypeValue = parseInt(websiteTypeSelect.value) || 0;
      const websiteTypeText = websiteTypeSelect.options[websiteTypeSelect.selectedIndex].text;
      const tasks = Array.from(document.querySelectorAll('input[name="tasks"]:checked'));
      let tasksHours = 0;
      let fixedCosts = 0;
      const tasksLabels = tasks.map(task => {
        const label = task.parentElement.textContent.trim();
        const value = task.value;
        if (value.startsWith('fixed:')) {
          fixedCosts += parseFloat(value.split(':')[1]);
          return label;
        } else {
          tasksHours += parseInt(value);
          return label;
        }
      });

      totalHours = websiteTypeValue + tasksHours;
      const hourlyRate = 1500;
      totalFee = (totalHours * hourlyRate) + fixedCosts;

      selectedItems = [];
      if (websiteTypeValue > 0) selectedItems.push(websiteTypeText);
      selectedItems.push(...tasksLabels);

      const selectedItemsList = document.getElementById('selected-items-list');
      selectedItemsList.innerHTML = '';
      if (selectedItems.length > 0) {
        selectedItems.forEach(item => {
          const li = document.createElement('li');
          li.textContent = item;
          selectedItemsList.appendChild(li);
        });
        document.getElementById('contact-form').classList.remove('hidden');
      } else {
        const li = document.createElement('li');
        li.textContent = 'No items selected';
        selectedItemsList.appendChild(li);
        document.getElementById('contact-form').classList.add('hidden');
        document.getElementById('payment-container').classList.add('hidden');
      }

      document.getElementById('total-hours').textContent = totalHours;
      document.getElementById('total-fee').textContent = `₹${totalFee.toLocaleString('en-IN')}`;
    }

    function showPaymentPopup(email, fee) {
      lastEmail = email;
      document.getElementById('modal-fee').textContent = `₹${fee.toLocaleString('en-IN')}`;
      document.getElementById('modal-email').textContent = email;
      document.getElementById('modal-payment-message').innerHTML = '';
      document.getElementById('payment-modal-overlay').classList.add('active');
      document.body.style.overflow = 'hidden';
    }
    function hidePaymentPopup() {
      document.getElementById('payment-modal-overlay').classList.remove('active');
      document.body.style.overflow = '';
    }
    document.getElementById('close-modal').onclick = hidePaymentPopup;
    document.getElementById('payment-modal-overlay').onclick = function(e) {
      if (e.target === this) hidePaymentPopup();
    };
    document.getElementById('modal-pay-now').onclick = async function() {
      const upiId = '9420970930@ibl';
      const payeeName = 'Vishant Velip';
      const transactionNote = 'Website Development Payment';
      const transactionId = `TXN${Date.now()}`;
      const upiLink = generateUpiLink(totalFee, upiId, payeeName, transactionNote, transactionId);
      let message = `Payment initiated for project.\nTransaction ID: ${transactionId}\nPayment Status: Pending\nNote: Payment is pending confirmation via UPI.\n\nSelected Project Items:\n${selectedItems.length > 0 ? '- ' + selectedItems.join('\n- ') : 'None'}\n\nTotal Estimated Cost: ₹${totalFee.toLocaleString('en-IN')}`;
      const success = await sendEmail('Client', lastEmail, message, selectedItems, totalFee, true, 'Pending');
      if (success) {
        document.getElementById('modal-payment-message').innerHTML = '<span class="form-message success">Redirecting to UPI app...</span>';
        setTimeout(() => { window.location.href = upiLink; }, 900);
      } else {
        document.getElementById('modal-payment-message').innerHTML = '<span class="form-message error">Failed to send payment email. Please try again.</span>';
      }
    };
    document.getElementById('modal-pay-later').onclick = async function() {
      let message = `Payment deferred for project.\nPayment Status: Pending\nNote: Payment will be processed later.\n\nSelected Project Items:\n${selectedItems.length > 0 ? '- ' + selectedItems.join('\n- ') : 'None'}\n\nTotal Estimated Cost: ₹${totalFee.toLocaleString('en-IN')}`;
      const success = await sendEmail('Client', lastEmail, message, selectedItems, totalFee, true, 'Pending');
      if (success) {
        document.getElementById('modal-payment-message').innerHTML = '<span class="form-message success">You have chosen to pay later. We will contact you soon!</span>';
        setTimeout(hidePaymentPopup, 1300);
      } else {
        document.getElementById('modal-payment-message').innerHTML = '<span class="form-message error">Failed to send payment email. Please try again.</span>';
      }
    };

    const sendBtn = document.getElementById('send-btn');
    sendBtn.addEventListener('mousedown', function() {
      sendBtn.classList.add('glow');
    });
    sendBtn.addEventListener('mouseup', function() {
      setTimeout(() => sendBtn.classList.remove('glow'), 500);
    });

    const form = document.getElementById('hire-me-form');
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const name = document.getElementById('name').value;
      const email = document.getElementById('email').value;
      let message = document.getElementById('message').value;
      if (selectedItems.length > 0) {
        message += `\n\nSelected Project Items:\n- ${selectedItems.join('\n- ')}`;
      } else {
        message += '\n\nSelected Project Items: None';
      }
      message += `\n\nTotal Estimated Cost: ₹${totalFee.toLocaleString('en-IN')}\nPayment Status: Pending`;
      const success = await sendEmail(name, email, message, selectedItems, totalFee, false, 'Pending');
      if (success) form.reset();
    });

    const calculatorForm = document.getElementById('calculator-form');
    calculatorForm.addEventListener('change', calculateCost);
    calculatorForm.addEventListener('input', calculateCost);

    document.addEventListener('DOMContentLoaded', () => {
      observeFadeIn('.hero-section,.hire-me-card,.calculator-section,.hire-me-form');
      calculateCost();
      initiatePaymentOptions();
    });
  </script>
</body>
</html>
